[project]
name = "data-analysis-template"
version = "0.1.0"
description = "Modern data science template with UV, Polars, and Marimo"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}

# Core dependencies - everything you need for the main analysis
dependencies = [
    # Data processing
    "polars>=0.20.0",
    "pandas>=2.0.0",
    "pyarrow>=15.0.0",
    
    # Interactive notebooks (core to your workflow!)
    "marimo>=0.6.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.29.0",
    
    # Visualization (essential for data analysis)
    "matplotlib>=3.8.0",
    "seaborn>=0.13.0",
    "plotly>=5.20.0",
    
    # Data science basics
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "scikit-learn>=1.4.0",
    
    # Utilities
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
# Development tools (truly optional)
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.4.0",
    "mypy>=1.10.0",
    "pre-commit>=3.7.0",
]

# Advanced ML (optional - only if needed)
ml-extra = [
    "xgboost>=2.0.0",
    "lightgbm>=4.3.0",
    "statsmodels>=0.14.0",
]

# Documentation (optional)
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.0",
]

# All extras
all = [
    "data-analysis-template[dev,ml-extra,docs]",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/data_analysis_template"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
line-length = 100
target-version = "py310"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "PTH", # flake8-use-pathlib
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports
"tests/*" = ["S101"]      # use of assert

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = """
    -v
    --strict-markers
    --tb=short
    --cov=src/czech_ozone
    --cov-report=term-missing
    --cov-report=html
"""

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
exclude = [
    "^notebooks/",
    "^tests/",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
